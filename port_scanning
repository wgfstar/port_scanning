#!/usr/bin/python3
# -*- coding: utf-8 -*-
import socket
from socket import *
import threading


#构造一个方法  创建具有给定许可数的计数信号量并设置为非公平信号量，就是说创建一个阻塞对象
screenLock = threading.Semaphore(value=1)
#测试当前主机和端口是否开放，直接使用socket连接
def connScan(host,port):
    try:
        # 创建一个套接字对象
        connSkt = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        # 尝试连接
        connSkt.connect((host,port))
        # 发送数据
        connSkt.send("violent pyhon\r\n")
        # 接受返回来的数据
        #result = connSkt.recv(100)
        # 产生的线程排好队，一个一个得打印
        screenLock.acquire()
        print("tcp open port:" + str(port))
    except:
        print('tcp closed:'+str(port))
    finally:
        # 释放掉
        screenLock.release()
        # 关闭连接
        connSkt.close()


def portScan(tgtHost, tgtPorts):
    try:
        # 根据域名，获取ip
        tgtIP = socket.gethostbyname(tgtHost)
    except:
        print("[-] Cannot resolve '%s': Unknown host" % tgtHost)
        return
    try:
        tgtName = socket.gethostbyaddr(tgtIP)
        print('\n[+] Scan Results for: ' + tgtName[0])
    except:
        print('\n[+] Scan Results for: ' + tgtIP)
    socket.setdefaulttimeout(1)
    for tgtPort in tgtPorts:
        print('Scanning port ' + str(tgtPort))
        t = threading.Thread(target=connScan, args=(tgtHost,int(tgtPort)))
        t.start()

def main():
    setdefaulttimeout(1)
    host = input("input target host:")
    for p in range(1,1024):
        portScan(host,p)

if __name__ == '__main__':
    main()
